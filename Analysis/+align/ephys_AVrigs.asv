function [ephysRefTimes, timelineRefTimes] = ephys_AVrigs(expPath)
    %%% This function will align the flipper of the ephys data to the
    %%% flipper taken from the timeline.
    %%%
    %%% This code is inspired by the code from kilotrode
    %%% (https://github.com/cortex-lab/kilotrodeRig).
    
    %% Get parameters
    % Parameters for processing (can be inputs in varargin{1})
    ephysPath = []; % for specific ephys folders (give full path)
    
    % This is not ideal
    if ~isempty(varargin)
        params = varargin{1};
        
        if isfield(params, 'alignType')
            ephysPath = params.ephysPath;
        end
        
        if nargin > 1
            timeline = varargin{2};
        end
    end
    
    %% Get timeline flipper times
    
    % Get timeline
    if ~exist('timeline','var')
        fprintf(1, 'loading timeline\n');
        timeline = getTimeline(expPath);
    end
    % Detect sync events from timeline
    timelineFlipperTimes = timepro.getChanEventTime(timeline,'flipper');

    %% Get all ephys flipper times
    
    % Get ephys folders
    % Will work only if the architecture is good.
    if isempty(ephysPath)
        % Just take them all.
        [subject, expDate, ~, server] = parseExpPath(expPath);
        ephysFiles = dir(fullfile(server,'Subjects',subject,expDate,'ephys','*/*','*.ap.bin'));
        % % To generalize across architectures..?
        % ephysFiles2 = dir(fullfile(server,'Subjects',subject,expDate,'ephys','*','*.ap.bin'));
        % ephysFiles(end+1:end+numel(ephysFiles2)) = ephysFiles2;
        if isempty(ephysFiles)
            error('No ephys file here: %s', fullfile(server,'Subjects',subject,expDate,'ephys'))
        else
            ephysPath = {ephysFiles.folder};
        end
    end
    
    % Get the sync for each recording
    for e = 1:numel(ephysPath)
        % Get syncData
        %%% Recheck what's its name. Also check with Flora how that thing
        %%% is going to be computed.
        syncDataFile = dir(fullfile(ephysPath{e},'*sync*'));
        
        if isempty(syncDataFile)
            warning('Couldn''t find the sync file here: %s. Skipping.', ephysPath{e})
            ephysFlipperTimes{e} = [];
        else
            % Load sync data
            syncData = load(fullfile(syncDataFile.folder,syncDataFile.name));
            
            % Extract flips
            metaDataFile = dir(fullfile(ephysPath{e},'*ap.meta'));
            if exist(metaDataFile,'file')
                metaS = readSpikeGLXmeta(fullfile(metaDataFile.folder,metaDataFile.name));
                Fs = metaS.sRateHz;
            else
                warning('Couldn''t find metadata for %s. Defining sampling rate as 30kHz.', ephysPath{e})
                Fs = 30000;
            end
            tmp = abs(diff(syncData));
            ephysFlipperTimes{e} = find(tmp>=median(tmp(tmp>0)))/Fs; % there can be sometimes spiky noise that creates problems here 
        end
    end
    % Remove empty files
    ephysPath(cellfun(@(x) isempty(x),ephysFlipperTimes)) = [];
    ephysFlipperTimes(cellfun(@(x) isempty(x),ephysFlipperTimes)) = [];
    
    %%  Match up ephys and timeline events
    % Algorithm here is to go through each ephys available, figure out
    % whether the events in timeline align with any of those in the ephys. If
    % so, we have a conversion of events in that ephys into timeline

    for e = 1:numel(ephysPath)
                fprintf('trying to correct timeline %d to ephys\n', expNums(e));
                %Timeline = tl{e};
                tlT = tlFlips{e};
                
                success=false;
                if length(tlT)==length(ef)
                    % easy case: the two are exactly coextensive
                    [~,b] = makeCorrection(ef, tlT, true);
                    success = true;
                elseif length(tlT)<length(ef) && ~isempty(tlT)
                    [~,b,success] = findCorrection(ef, tlT, false);
                elseif length(tlT)>length(ef) && ~isempty(tlT)
                    [~,a,success] = findCorrection(tlT, ef, false);
                    if ~isempty(a)
                        b = [1/a(1); -a(2)/a(1)];
                    end
                end
                if success
                    %                 writeNPY(b, fullfile(alignDir, ...
                    %                     sprintf('correct_timeline_%d_to_ephys_%s.npy', ...
                    %                     e, tags{1})));
                    writeNPY(b, fullfile(alignDir, ...
                        sprintf('correct_timeline_%d_to_ephys_%s.npy', ...
                        expNums(e), tags{1})));
                    fprintf('success\n');
                    eTimeline2keep = e;
                else
                    fprintf('could not correct timeline to ephys\n');
                end
            end
        end
    end
    
    TLexp = expNums(eTimeline2keep);
    Timeline = tl{eTimeline2keep};
    
end