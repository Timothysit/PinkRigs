function evTimes = getChanEventTime(timeline,chanName)
    %%% This function will extract event times depending on the chan. 
    
    %% Extract channel
    chan = timepro.extractChan(timeline,chanName);
    
    %% Extract events
    if ~isempty(chan)
        switch chanName
            case 'photoDiode'
                photoDiodeTrace = timeline.rawDAQData(:,strcmp(inputNames, 'photoDiode'));
                [~, thresh] = kmeans(photoDiodeTrace,5);
                thresh = [min(thresh) + range(thresh)*0.2;  max(thresh) - range(thresh)*0.2];
                
                %Find flips based on these thresholds.
                photoDiodeFlipOn = sort([strfind(photoDiodeTrace'>thresh(1), [0 1]), strfind(photoDiodeTrace'>thresh(2), [0 1])]);
                photoDiodeFlipOff = sort([strfind(photoDiodeTrace'<thresh(1), [0 1]), strfind(photoDiodeTrace'<thresh(2), [0 1])]);
                photoDiodeFlips = sort([photoDiodeFlipOn photoDiodeFlipOff]);
                
                %Remove cases where two flips in the same direction appear in succession (you can't flip to white twice in a row)
                photoDiodeFlips([strfind(ismember(photoDiodeFlips, photoDiodeFlipOn), [1 1])+1 strfind(ismember(photoDiodeFlips, photoDiodeFlipOff), [1 1])+1]) = [];
                
                %Get corresponding flip times. Remove any that would be faster than 60Hz (screen refresh rate)
                photoDiodeFlipTimes = timeline.rawDAQTimestamps(photoDiodeFlips)';
                photoDiodeFlipTimes(find(diff(photoDiodeFlipTimes)<(12/1000))+1) = [];
                
            case 'audioOut'
                
            case 'camSync'
                % Get cam Sync events (onset of dark flash)
                tlSyncThresh = [2 3]; % these seem to work well
                [~, ~, evTimes] = schmittTimes(1:numel(tlSync), tlSync, tlSyncThresh);
                
            case {'faceCamStrobe','eyeCamStrobe','sideCamStrobe'}
                % Get cam strobe events
                tlStrobeThresh = [1 2];
                [~,evTimes,~] = schmittTimes(1:numel(tlStrobe), tlStrobe, tlStrobeThresh);
                
            case 'rewardEcho'
                thresh = max(chan)/2;
                rewardTrace = chan > thresh;
                evTimes = strfind(rewardTrace', [0 1])+1;
                
        end
        
    else
        % Channel couldn't be found. Warning already sent. 
        evTimes = [];
    end
    
    %% In Timeline time
    timelineTime = timepro.extractChan(timeline,'time');
    evTimes = timelineTime(evTimes);